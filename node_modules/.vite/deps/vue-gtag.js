import {
  nextTick
} from "./chunk-TF6X5W6F.js";
import "./chunk-DZZM6G22.js";

// node_modules/vue-gtag/dist/vue-gtag.es.js
var x = (e, n = {}) => new Promise((t, a) => {
  if (typeof document > "u")
    return;
  const r = document.head || document.getElementsByTagName("head")[0], c = document.createElement("script");
  if (c.async = true, c.src = e, c.defer = n.defer, n.preconnectOrigin) {
    const o = document.createElement("link");
    o.href = n.preconnectOrigin, o.rel = "preconnect", r.appendChild(o);
  }
  r.appendChild(c), c.onload = t, c.onerror = a;
});
var d = (e) => typeof e == "function";
var p = (e) => e && typeof e == "object" && !Array.isArray(e);
var f = (e, ...n) => {
  if (!n.length)
    return e;
  const t = n.shift();
  if (!(!p(e) || !p(t))) {
    for (const a in t)
      p(t[a]) ? (e[a] || Object.assign(e, { [a]: {} }), f(e[a], t[a])) : Object.assign(e, { [a]: t[a] });
    return f(e, ...n);
  }
};
var u = () => !(typeof window > "u" || typeof document > "u");
var y = (e, n = true) => {
  !u() || false || n && console.warn(`[vue-gtag] ${e}`);
};
var D = (e = {}) => (y(
  'Missing "appName" property inside the plugin options.',
  e.app_name == null
), y('Missing "name" property in the route.', e.screen_name == null), e);
function $(e = "", n = "") {
  const t = e.split("/"), a = n.split("/");
  return t[0] === "" && n[n.length - 1] === "/" && t.shift(), a.join("/") + t.join("/");
}
var F = () => ({
  bootstrap: true,
  onReady: null,
  onError: null,
  onBeforeTrack: null,
  onAfterTrack: null,
  pageTrackerTemplate: null,
  customResourceURL: "https://www.googletagmanager.com/gtag/js",
  customPreconnectOrigin: "https://www.googletagmanager.com",
  deferScriptLoad: false,
  pageTrackerExcludedRoutes: [],
  pageTrackerEnabled: true,
  enabled: true,
  disableScriptLoad: false,
  pageTrackerScreenviewEnabled: false,
  appName: null,
  pageTrackerUseFullPath: false,
  pageTrackerPrependBase: true,
  pageTrackerSkipSamePath: true,
  globalDataLayerName: "dataLayer",
  globalObjectName: "gtag",
  defaultGroupName: "default",
  includes: null,
  config: {
    id: null,
    params: {
      send_page_view: false
    }
  }
});
var P = {};
var G = (e = {}) => {
  const n = F();
  P = f(n, e);
};
var s = () => P;
var i = (...e) => {
  const { globalObjectName: n } = s();
  !u() || typeof window[n] > "u" || window[n](...e);
};
var g = (...e) => {
  const { config: n, includes: t } = s();
  if (i("config", n.id, ...e), Array.isArray(t))
    for (const a of t)
      i("config", a.id, ...e);
};
var b = (e, n) => {
  u() && (window[`ga-disable-${e}`] = n);
};
var v = (e = true) => {
  const { config: n, includes: t } = s();
  if (b(n.id, e), Array.isArray(t))
    for (const a of t)
      b(a.id, e);
};
var O = () => {
  v(true);
};
var M = () => {
  v(false);
};
var l = (e, n = {}) => {
  const { includes: t, defaultGroupName: a } = s();
  n.send_to == null && Array.isArray(t) && t.length && (n.send_to = t.map((r) => r.id).concat(a)), i("event", e, n);
};
var A;
var U = (e) => {
  A = e;
};
var m = () => A;
var E = (e) => {
  if (!u())
    return;
  let n;
  if (typeof e == "string")
    n = {
      page_path: e
    };
  else if (e.path || e.fullPath) {
    const {
      pageTrackerUseFullPath: t,
      pageTrackerPrependBase: a
    } = s(), r = m(), c = r == null ? void 0 : r.options.base, o = t ? e.fullPath : e.path;
    n = {
      ...e.name && { page_title: e.name },
      page_path: a ? $(o, c) : o
    };
  } else
    n = e;
  n.page_location == null && (n.page_location = window.location.href), n.send_page_view == null && (n.send_page_view = true), l("page_view", n);
};
var N = (e) => {
  const { appName: n } = s();
  if (!e)
    return;
  let t;
  typeof e == "string" ? t = {
    screen_name: e
  } : t = e, t.app_name = t.app_name || n, l("screen_view", t);
};
var C = (...e) => {
  l("exception", ...e);
};
var q = (e) => {
  g("linker", e);
};
var z = (e) => {
  l("timing_complete", e);
};
var I = (...e) => {
  i("set", ...e);
};
var V = (...e) => {
  l("refund", ...e);
};
var W = (e) => {
  l("purchase", e);
};
var H = (e) => {
  g({
    custom_map: e
  });
};
var J = Object.freeze(Object.defineProperty({
  __proto__: null,
  config: g,
  customMap: H,
  event: l,
  exception: C,
  linker: q,
  optIn: M,
  optOut: O,
  pageview: E,
  purchase: W,
  query: i,
  refund: V,
  screenview: N,
  set: I,
  time: z
}, Symbol.toStringTag, { value: "Module" }));
var K = (e) => {
  e.config.globalProperties.$gtag = J;
};
var _ = (e) => ({
  send_page_view: false,
  ...e
});
var S = () => {
  const { config: e, includes: n } = s();
  if (i("config", e.id, _(e.params)), Array.isArray(n))
    for (const t of n)
      i("config", t.id, _(t.params));
};
var k = (e = {}, n = {}) => {
  const {
    appName: t,
    pageTrackerTemplate: a,
    pageTrackerScreenviewEnabled: r,
    pageTrackerSkipSamePath: c
  } = s();
  if (c && e.path === n.path)
    return;
  let o = e;
  if (d(a) ? o = a(e, n) : r && (o = D({
    app_name: t,
    screen_name: e.name
  })), r) {
    N(o);
    return;
  }
  E(o);
};
var T = (e) => {
  const { pageTrackerExcludedRoutes: n } = s();
  return n.includes(e.path) || n.includes(e.name);
};
var Q = () => {
  const { onBeforeTrack: e, onAfterTrack: n } = s(), t = m();
  t.isReady().then(() => {
    nextTick().then(() => {
      const { currentRoute: a } = t;
      S(), !T(a.value) && k(a.value);
    }), t.afterEach((a, r) => {
      nextTick().then(() => {
        T(a) || (d(e) && e(a, r), k(a, r), d(n) && n(a, r));
      });
    });
  });
};
var X = () => {
  if (!u())
    return;
  const { enabled: e, globalObjectName: n, globalDataLayerName: t } = s();
  return window[n] == null && (window[t] = window[t] || [], window[n] = (...a) => {
    window[t].push(a);
  }), window[n]("js", /* @__PURE__ */ new Date()), e || O(), window[n];
};
var Y = () => {
  const {
    onReady: e,
    onError: n,
    globalObjectName: t,
    globalDataLayerName: a,
    config: r,
    customResourceURL: c,
    customPreconnectOrigin: o,
    deferScriptLoad: R,
    pageTrackerEnabled: j,
    disableScriptLoad: L
  } = s(), B = !!(j && m());
  if (X(), B ? Q() : S(), !L)
    return x(`${c}?id=${r.id}&l=${a}`, {
      preconnectOrigin: o,
      defer: R
    }).then(() => {
      e && e(window[t]);
    }).catch((w) => (n && n(w), w));
};
var ee = (e, n, t) => {
  K(e), G(n), U(t), s().bootstrap && Y();
};
export {
  Q as addRoutesTracker,
  Y as bootstrap,
  g as config,
  H as customMap,
  ee as default,
  l as event,
  C as exception,
  ee as install,
  q as linker,
  M as optIn,
  O as optOut,
  E as pageview,
  W as purchase,
  i as query,
  V as refund,
  N as screenview,
  I as set,
  G as setOptions,
  U as setRouter,
  z as time
};
//# sourceMappingURL=vue-gtag.js.map
